"""Added new coloums for similar image grouping

Revision ID: 6dead74f7a4b
Revises: f24bd1fcf65e
Create Date: 2025-04-18 01:52:12.335462

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from pgvector.sqlalchemy import Vector


# revision identifiers, used by Alembic.
revision: str = '6dead74f7a4b'
down_revision: Union[str, None] = 'f24bd1fcf65e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('image_embeddings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('image_id', sa.Integer(), nullable=False),
    sa.Column('embedding_type', sa.String(), nullable=False),
    sa.Column('embedding', Vector(512), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['image_id'], ['images.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_image_embeddings_image_type', 'image_embeddings', ['image_id', 'embedding_type'], unique=True)
    op.create_index('idx_image_embeddings_type', 'image_embeddings', ['embedding_type'], unique=False)
    op.create_index(op.f('ix_image_embeddings_image_id'), 'image_embeddings', ['image_id'], unique=False)
    
    op.create_table('similar_image_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_type', sa.String(), nullable=False),
    sa.Column('key_image_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['key_image_id'], ['images.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_similar_groups_type', 'similar_image_groups', ['group_type'], unique=False)
    
    op.create_table('similar_image_group_members',
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('image_id', sa.Integer(), nullable=False),
    sa.Column('similarity_score', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['similar_image_groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['image_id'], ['images.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('group_id', 'image_id')
    )
    op.create_index('idx_group_members_image', 'similar_image_group_members', ['image_id'], unique=False)
    op.create_index('idx_group_members_score', 'similar_image_group_members', ['similarity_score'], unique=False)
    
    # Update existing columns
    op.alter_column('face_detections', 'confidence',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('face_detections', 'embedding',
               existing_type=Vector(512),
               nullable=False)
    op.alter_column('face_identities', 'reference_embedding',
               existing_type=Vector(512),
               nullable=False)
    
    # Update filename index
    op.drop_constraint('images_filename_key', 'images', type_='unique')
    op.drop_index('ix_images_filename', table_name='images')
    op.create_index(op.f('ix_images_filename'), 'images', ['filename'], unique=True)
    
    # Remove EXIF columns from images table since they're now in exif_metadata
    op.drop_column('images', 'exposure_time')
    op.drop_column('images', 'camera_make')
    op.drop_column('images', 'camera_model')
    op.drop_column('images', 'focal_length')
    op.drop_column('images', 'iso')
    op.drop_column('images', 'f_number')


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('images', sa.Column('f_number', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('images', sa.Column('iso', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('images', sa.Column('focal_length', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('images', sa.Column('camera_model', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('images', sa.Column('camera_make', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('images', sa.Column('exposure_time', sa.VARCHAR(), autoincrement=False, nullable=True))
    
    # Restore filename index
    op.drop_index(op.f('ix_images_filename'), table_name='images')
    op.create_index('ix_images_filename', 'images', ['filename'], unique=False)
    op.create_unique_constraint('images_filename_key', 'images', ['filename'])
    
    # Restore nullable columns
    op.alter_column('face_identities', 'reference_embedding',
               existing_type=Vector(512),
               nullable=True)
    op.alter_column('face_detections', 'embedding',
               existing_type=Vector(512),
               nullable=True)
    op.alter_column('face_detections', 'confidence',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    
    # Drop new tables in reverse order
    op.drop_index('idx_group_members_score', table_name='similar_image_group_members')
    op.drop_index('idx_group_members_image', table_name='similar_image_group_members')
    op.drop_table('similar_image_group_members')
    op.drop_index('idx_similar_groups_type', table_name='similar_image_groups')
    op.drop_table('similar_image_groups')
    op.drop_index(op.f('ix_image_embeddings_image_id'), table_name='image_embeddings')
    op.drop_index('idx_image_embeddings_type', table_name='image_embeddings')
    op.drop_index('idx_image_embeddings_image_type', table_name='image_embeddings')
    op.drop_table('image_embeddings')
    # ### end Alembic commands ###
